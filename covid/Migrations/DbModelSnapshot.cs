// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using covid.Models;

namespace covid.Migrations
{
    [DbContext(typeof(Db))]
    partial class DbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("covid.Models.CsvModel", b =>
                {
                    b.Property<string>("IsoCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Continent")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Aged65Older")
                        .HasColumnType("float");

                    b.Property<double?>("Aged70Older")
                        .HasColumnType("float");

                    b.Property<double?>("CardiovasculourDeathRate")
                        .HasColumnType("float");

                    b.Property<double?>("DiabetesPrevalence")
                        .HasColumnType("float");

                    b.Property<double?>("ExtremePoverty")
                        .HasColumnType("float");

                    b.Property<double?>("FemaleSmokers")
                        .HasColumnType("float");

                    b.Property<double?>("GdpPerCapita")
                        .HasColumnType("float");

                    b.Property<double?>("HandwashingFacilities")
                        .HasColumnType("float");

                    b.Property<double?>("HospitalBedsPerThousand")
                        .HasColumnType("float");

                    b.Property<double?>("LifeExpectancy")
                        .HasColumnType("float");

                    b.Property<double?>("MaleSmokers")
                        .HasColumnType("float");

                    b.Property<double?>("MedianAge")
                        .HasColumnType("float");

                    b.Property<double?>("NewCases")
                        .HasColumnType("float");

                    b.Property<double?>("NewCasesPerMillion")
                        .HasColumnType("float");

                    b.Property<double?>("NewCasesSmoothed")
                        .HasColumnType("float");

                    b.Property<double?>("NewCasesSmoothedPerMillion")
                        .HasColumnType("float");

                    b.Property<double?>("NewDeaths")
                        .HasColumnType("float");

                    b.Property<double?>("NewDeathsPerMillion")
                        .HasColumnType("float");

                    b.Property<double?>("NewDeathsSmoothed")
                        .HasColumnType("float");

                    b.Property<double?>("NewDeathsSmoothedPerMillion")
                        .HasColumnType("float");

                    b.Property<double?>("NewTests")
                        .HasColumnType("float");

                    b.Property<double?>("NewTestsPerThousand")
                        .HasColumnType("float");

                    b.Property<double?>("NewTestsSmoothed")
                        .HasColumnType("float");

                    b.Property<double?>("NewTestsSmoothedPerThousand")
                        .HasColumnType("float");

                    b.Property<double?>("Population")
                        .HasColumnType("float");

                    b.Property<double?>("PopulationDensity")
                        .HasColumnType("float");

                    b.Property<double?>("PositiveRate")
                        .HasColumnType("float");

                    b.Property<double?>("StringencyIndex")
                        .HasColumnType("float");

                    b.Property<double?>("TestsPerCase")
                        .HasColumnType("float");

                    b.Property<string>("TestsUnits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TotalCases")
                        .HasColumnType("float");

                    b.Property<double?>("TotalCasesPerMillion")
                        .HasColumnType("float");

                    b.Property<double?>("TotalDeaths")
                        .HasColumnType("float");

                    b.Property<double?>("TotalDeathsPerMillion")
                        .HasColumnType("float");

                    b.Property<double?>("TotalTests")
                        .HasColumnType("float");

                    b.Property<double?>("TotalTestsPerThousand")
                        .HasColumnType("float");

                    b.HasKey("IsoCode", "Continent", "Location", "Date");

                    b.ToTable("Rows");
                });
#pragma warning restore 612, 618
        }
    }
}
